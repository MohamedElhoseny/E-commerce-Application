package model.entity;
// Generated Mar 30, 2019, 4:19:02 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name="\"order\""
    ,catalog="ecommerce"
)
public class Order  implements java.io.Serializable {


     private int id;
     private Shipping shipping;
     private User user;
     private Date date;
     private String street;
     private String country;
     private String city;
     private String postcode;
     private Set<OrderHasProducts> orderHasProductses = new HashSet<OrderHasProducts>(0);
     private double totalPrice;
     private String fullName;
     private String phoneNumber;

    public Order() {
    }

	
    public Order(int id) {
        this.id = id;
    }
    public Order(int id, Shipping shipping, User user, Date date, String street, String country, String city, String postcode, Set<OrderHasProducts> orderHasProductses) {
       this.id = id;
       this.shipping = shipping;
       this.user = user;
       this.date = date;
       this.street = street;
       this.country = country;
       this.city = city;
       this.postcode = postcode;
       this.orderHasProductses = orderHasProductses;
    }
   
     @Id 

    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="shippingID")
    public Shipping getShipping() {
        return this.shipping;
    }
    
    public void setShipping(Shipping shipping) {
        this.shipping = shipping;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userID")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date", length=19)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

    
    @Column(name="street")
    public String getStreet() {
        return this.street;
    }
    
    public void setStreet(String street) {
        this.street = street;
    }

    @Column(name="price")
    public double getTotalPrice() {
        return totalPrice;
    }

    public void setTotalPrice(double totalPrice) {
        this.totalPrice = totalPrice;
    }

    @Column(name="name")
    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Column(name="phone")
    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }
    

    
    @Column(name="country")
    public String getCountry() {
        return this.country;
    }
    
    public void setCountry(String country) {
        this.country = country;
    }

    
    @Column(name="city")
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="postcode")
    public String getPostcode() {
        return this.postcode;
    }
    
    public void setPostcode(String postcode) {
        this.postcode = postcode;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
    public Set<OrderHasProducts> getOrderHasProductses() {
        return this.orderHasProductses;
    }
    
    public void setOrderHasProductses(Set<OrderHasProducts> orderHasProductses) {
        this.orderHasProductses = orderHasProductses;
    }




}


